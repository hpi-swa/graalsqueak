language: java

sudo: required
dist: trusty

python:
  - "2.7"

aliases:
  - &clone-mx
    |
      export MX_PATH=${TRAVIS_BUILD_DIR}/../mx
      git clone --depth 1 https://github.com/graalvm/mx.git ${MX_PATH}
      export PATH=${PATH}:${MX_PATH}
  - &use-jvmci
    |
      JVMCI_VERSION="jvmci-0.54"
      JVMCI_BASE_JDK8="openjdk1.8.0_192"
      JVMCI_FILE_JDK8="openjdk-8u192"
      JDK_TAR=${TRAVIS_BUILD_DIR}/../jdk.tar.gz
      curl -sSL --retry 3 -o ${JDK_TAR} https://github.com/graalvm/openjdk8-jvmci-builder/releases/download/${JVMCI_VERSION}/${JVMCI_FILE_JDK8}-${JVMCI_VERSION}-linux-amd64.tar.gz
      tar -C ${TRAVIS_BUILD_DIR}/.. -xzf ${JDK_TAR}
      export JAVA_HOME=${TRAVIS_BUILD_DIR}/../${JVMCI_BASE_JDK8}-${JVMCI_VERSION}
  - &use-graal-vm
    |
      GRAAL_VM_VERSION=1.0.0-rc11
      GRAAL_VM_TARBALL=graalvm-ce-${GRAAL_VM_VERSION}-linux-amd64.tar.gz
      pushd ~/ > /dev/null
      curl -sSL --retry 3 -o ${GRAAL_VM_TARBALL} https://github.com/oracle/graal/releases/download/vm-${GRAAL_VM_VERSION}/${GRAAL_VM_TARBALL}
      tar -xzf ${GRAAL_VM_TARBALL}
      export JAVA_HOME=$(pwd)/graalvm-ce-${GRAAL_VM_VERSION}
      popd > /dev/null
  - &configure-python-for-pylint
    addons:
      apt:
        packages:
          - python-pip
          - python-virtualenv
  - &install-pylint
    |
      virtualenv venv
      source venv/bin/activate
      pip install astroid==1.1.0
      pip install pylint==1.1.0
  - &download-eclipse
    |
      pushd ${TRAVIS_BUILD_DIR}/.. > /dev/null
      local eclipse_tar="ci-dep-eclipse-SDK-4.5.2-linux-gtk-x86_64.tar.gz"
      ${TRAVIS_BUILD_DIR}/scripts/download-file.sh "${eclipse_tar}"
      tar -xzf ${eclipse_tar}
      export ECLIPSE_EXE=$(pwd)/eclipse/eclipse
      popd > /dev/null
  - &download-ecj
    |
      export JDT=${MX_PATH}/ecj.jar
      local ecj_tar="ci-dep-ecj-4.5.2.jar"
      ${TRAVIS_BUILD_DIR}/scripts/download-file.sh "${ecj_tar}" "${JDT}"
  - &jdk8-test-setup # set up jvmci, download image, enable coverage testing
    jdk: oraclejdk8
    install: *use-jvmci
    before_script:
      - scripts/download-test-image.sh
      - curl -sSL --retry 3 -o ~/codacy-coverage-reporter.jar "https://github.com/codacy/codacy-coverage-reporter/releases/download/4.0.3/codacy-coverage-reporter-4.0.3-assembly.jar"
      - export MX_OPTS="--jacocout coverage"
    after_success:
      - bash <(curl -s https://codecov.io/bash)
      - java -jar ~/codacy-coverage-reporter.jar report -l Java -r jacoco.xml
  - &jdk11-test-setup # set up oraclejdk11 and download image
    jdk: oraclejdk11
    before_script: scripts/download-test-image.sh

before_install: *clone-mx

script: mx --extra-java-homes=/usr/lib/jvm/java-8-oracle gate ${MX_OPTS} --strict-mode --tags ${GATE}

jobs:
  include:
    - env: JDK="jdk8" GATE="style,fullbuild"
      jdk: oraclejdk8
      install:
        - *use-jvmci
        - *install-pylint
        - *download-eclipse
        - *download-ecj
      <<: *configure-python-for-pylint
    - env: JDK="jdk8" GATE="build,test" ARCH="32bit"
      <<: *jdk8-test-setup
    - env: JDK="jdk8" GATE="build,test" ARCH="64bit"
      <<: *jdk8-test-setup
    - env: JDK="jdk11" GATE="style,fullbuild"
      jdk: oraclejdk11
      install:
        - *install-pylint
        - *download-eclipse
      <<: *configure-python-for-pylint
    - env: JDK="jdk11" GATE="build,test" ARCH="32bit"
      <<: *jdk11-test-setup
    - env: JDK="jdk11" GATE="build,test" ARCH="64bit"
      <<: *jdk11-test-setup
    - env: SUBSTRATE_VM=true
      script:
        - mx squeak-svm
        - bin/graalsqueak-svm --version:graalvm
      language: c
      addons:
        apt:
          packages:
            - libsdl2-dev
      install: *use-jvmci
  fast_finish: true
